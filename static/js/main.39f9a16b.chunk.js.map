{"version":3,"sources":["file/FileUpload.js","layout/MainHeading.js","layout/TextInput.js","layout/Label.js","connection/Connection.js","column/Column.js","layout/Details.js","datasource/Datasource.js","worksheet/Worksheet.js","workbook/Workbook.js","workbook/WorkbookView.js","App.js","reportWebVitals.js","index.js"],"names":["FileUpload","props","handleChange","event","file","target","files","setState","addEvent","state","undefined","bind","className","htmlFor","type","name","onChange","React","Component","MainHeading","children","TextInput","id","defaultValue","Label","Connection","connectionXML","dbName","server","username","authentication","schema","service","port","this","_setUpdate","prevProps","connection","getAttribute","connectionClass","action","Column","columnXML","caption","datatype","role","calculation","description","usedIn","_prepareCalculation","_addUsedIn","column","worksheetDatasources","formula","calculationElement","getElementsByTagName","worksheet","datasourceInfo","datasourceDeps","columns","includes","push","length","Details","opened","onClick","handleClick","icon","title","Datasource","datasourceXML","version","connections","_prepareConnections","_prepareColumns","_filterWorksheets","datasource","connectionsElements","index","columnsElements","relatedWorksheets","map","worksheetIndex","thisDatasource","filter","element","worksheetName","datasourceName","connectionIndex","columnIndex","Worksheet","worksheetXML","datasourceDependencies","_DatasourceDepsToParent","_prepareDatasourceDependencies","workbook","addDatasourceDeps","dependencies","dependency","columnName","Workbook","fileName","workbookXML","dashboards","datasources","worksheets","worksheetsDatasources","_prepareDashboards","_prepareDatasources","_prepareWorksheets","_addWorksheetDeps","xmlDoc","dashboardElements","dashboardName","datasourceElements","worksheetElements","concat","datasourcesIndex","datasourceDepIndex","datasourceDep","addUsedIn","xmlStr","XMLSerializer","serializeToString","_workbookXML","downloadAnchor","document","createElement","setAttribute","encodeURIComponent","_fileName","style","display","body","appendChild","click","removeChild","datasourceIndex","WorkbookView","add","loaded","fileObject","parser","DOMParser","split","slice","JSZip","loadAsync","then","zip","twbName","Object","keys","find","async","content","errorMessage","parseFromString","reader","FileReader","onload","result","readAsText","loadedEvent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39f9a16b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { file: undefined };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (event) => {\n    let file = event.target.files[0];\n    if (file) {\n      this.setState({ file: file }, () => {\n        if (this.props.addEvent) {\n          this.props.addEvent(this.state.file);\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mb-8\">\n        <label className=\"text-sm font-medium text-gray-900 block\" htmlFor=\"twb\"></label>\n        <input\n          className=\"block cursor-pointer bg-gray-50 border border-gray-300 text-gray-900 focus:outline-none focus:border-transparent text-sm rounded-lg\"\n          type=\"file\"\n          name=\"twb\"\n          onChange={(event) => this.handleChange(event)}\n        />\n      </div>\n    );\n  }\n}\n","export default function MainHeading(props) {\n  return (\n    <div className=\"text-center my-8 text-4xl\">\n      <h1>{props.children}</h1>\n    </div>\n  );\n}\n","export default function TextInput(props) {\n  return (\n    <input\n      className=\"border appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n      type=\"text\"\n      name={props.name}\n      id={props.id}\n      defaultValue={props.defaultValue}\n    />\n  );\n}\n","export default function Label(props) {\n  return (\n    <label className=\"block text-gray-700 text-sm font-bold my-2\" htmlFor={props.htmlFor}>\n      {props.children}\n    </label>\n  );\n}\n","import React from \"react\";\nimport TextInput from \"../layout/TextInput.js\";\nimport Label from \"../layout/Label.js\";\n\nexport default class Connection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectionXML: null,\n      dbName: null,\n      server: null,\n      username: null,\n      authentication: null,\n      className: null,\n      schema: null,\n      service: null,\n      port: null,\n    };\n  }\n\n  componentDidMount() {\n    this._setUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.connection !== this.props.connection) {\n      this._setUpdate();\n    }\n  }\n\n  _setUpdate() {\n    this.setState((state, props) => ({\n      connectionXML: this.props.connection,\n      dbName: this.props.connection.getAttribute(\"dbname\"),\n      server: this.props.connection.getAttribute(\"server\"),\n      username: this.props.connection.getAttribute(\"username\"),\n      authentication: this.props.connection.getAttribute(\"authentication\"),\n      className: this.props.connection.getAttribute(\"class\"),\n      schema: this.props.connection.getAttribute(\"schema\"),\n      service: this.props.connection.getAttribute(\"service\"),\n      port: this.props.connection.getAttribute(\"port\"),\n    }));\n  }\n\n  render() {\n    const connectionClass = this.state.className;\n    const dbName = this.state.dbName;\n\n    if (connectionClass && dbName) {\n      return (\n        <section>\n          <div className=\"bg-white border rounded px-8 pt-6 pb-8 mb-4\">\n            <h4 className=\"my-2\">Connection</h4>\n            <form action=\"\">\n              <Label htmlFor=\"dbName\">DB Name: </Label>\n              <TextInput type=\"text\" name=\"dbName\" id=\"\" defaultValue={this.state.dbName} />\n            </form>\n          </div>\n        </section>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\n\nexport default class Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnXML: null,\n      name: null,\n      caption: null,\n      datatype: null,\n      role: null,\n      type: null,\n      calculation: null,\n      description: null,\n      usedIn: null,\n    };\n    this._setUpdate = this._setUpdate.bind(this);\n    this._prepareCalculation = this._prepareCalculation.bind(this);\n    this._addUsedIn = this._addUsedIn.bind(this);\n  }\n\n  componentDidMount() {\n    this._setUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    let condition = prevProps.column !== this.props.column || prevProps.worksheetDatasources !== this.props.worksheetDatasources;\n    if (condition) {\n      this._setUpdate();\n    }\n  }\n\n  _setUpdate() {\n    this.setState((state, props) => ({\n      columnXML: this.props.column,\n      name: this.props.column.getAttribute(\"name\"),\n      caption: this.props.column.getAttribute(\"caption\"),\n      datatype: this.props.column.getAttribute(\"datatype\"),\n      role: this.props.column.getAttribute(\"role\"),\n      type: this.props.column.getAttribute(\"type\"),\n      calculation: this._prepareCalculation(this.props.column),\n      description: this.props.column.getAttribute(\"description\"),\n      usedIn: this._addUsedIn(),\n    }));\n  }\n\n  _prepareCalculation(columnXML) {\n    let formula = null;\n    let calculationElement = columnXML.getElementsByTagName(\"calculation\")[0];\n    if (calculationElement) {\n      formula = calculationElement.getAttribute(\"formula\");\n    }\n    return formula;\n  }\n\n  _addUsedIn() {\n    let usedIn = [];\n    const worksheetDatasources = this.props.worksheetDatasources;\n    for (let worksheet of worksheetDatasources) {\n      const datasourceInfo = worksheet.datasourceDeps;\n      if (datasourceInfo) {\n        let used = datasourceInfo.columns.includes(this.state.name);\n        if (used) {\n          usedIn.push(worksheet.name);\n        }\n      }\n    }\n    if (usedIn.length < 1 || usedIn === undefined) {\n      return \"unused\";\n    } else {\n      return usedIn;\n    }\n  }\n\n  render() {\n    const name = this.state.name;\n    if (name) {\n      return (\n        <tr>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.name}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.caption}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.datatype}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.role}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.type}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.calculation}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.description}</td>\n          <td className=\"px-6 py-4 text-sm text-gray-500\">{this.state.usedIn}</td>\n        </tr>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\n\nexport default class Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { opened: false };\n  }\n\n  handleClick(event) {\n    if (event.target) {\n      this.setState((state, props) => ({ opened: !state.opened }));\n    }\n  }\n\n  render() {\n    const opened = this.state.opened;\n    return (\n      <details className=\"bg-white mb-3 p-3 rounded border\" onClick={(event) => this.handleClick(event)}>\n        <summary>\n          <span className=\"mx-2\">{this.props.icon}</span>\n          <h3>{this.props.title}</h3>\n          <span className={`icon ${opened ? \"transform rotate-180\" : \"\"}`}>👇</span>\n        </summary>\n        <div className=\"mt-4\">{this.props.children}</div>\n      </details>\n    );\n  }\n}\n","import Connection from \"../connection/Connection.js\";\nimport Column from \"../column/Column.js\";\nimport Details from \"../layout/Details.js\";\nimport TextInput from \"../layout/TextInput.js\";\nimport Label from \"../layout/Label.js\";\n\nimport React from \"react\";\n\nexport default class Datasource extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasourceXML: null,\n      name: null,\n      version: null,\n      caption: null,\n      connections: null,\n      columns: null,\n    };\n    this._setUpdate = this._setUpdate.bind(this);\n    this._prepareConnections = this._prepareConnections.bind(this);\n    this._prepareColumns = this._prepareColumns.bind(this);\n    this._filterWorksheets = this._filterWorksheets.bind(this);\n  }\n\n  componentDidMount() {\n    this._setUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.datasource !== this.props.datasource) {\n      this._setUpdate();\n    }\n  }\n\n  _setUpdate() {\n    this.setState((state, props) => ({\n      datasourceXML: this.props.datasource,\n      name: this.props.datasource.getAttribute(\"name\"),\n      version: this.props.datasource.getAttribute(\"version\"),\n      caption: this.props.datasource.getAttribute(\"caption\"),\n      connections: this._prepareConnections(this.props.datasource),\n      columns: this._prepareColumns(this.props.datasource),\n    }));\n  }\n\n  _prepareConnections(datasourceXML) {\n    let connections = [];\n    let connectionsElements = datasourceXML.getElementsByTagName(\"connection\");\n    for (let index = 0; index < connectionsElements.length; index++) {\n      connections.push(connectionsElements[index]);\n    }\n    return connections;\n  }\n\n  _prepareColumns(datasourceXML) {\n    let columns = [];\n    let columnsElements = datasourceXML.getElementsByTagName(\"column\");\n    for (let index = 0; index < columnsElements.length; index++) {\n      columns.push(columnsElements[index]);\n    }\n    return columns;\n  }\n\n  _filterWorksheets() {\n    const worksheetDatasources = this.props.worksheetDatasources;\n    let relatedWorksheets = [];\n    worksheetDatasources.map((worksheet, worksheetIndex) => {\n      let thisDatasource = worksheet.datasourceDeps.filter((element) => {\n        return element.name === this.state.name;\n      });\n      relatedWorksheets.push({ name: worksheet.worksheetName, datasourceDeps: thisDatasource[0] });\n    });\n    return relatedWorksheets;\n  }\n\n  render() {\n    const datasourceName = this.state.name;\n    const connections = this.state.connections;\n    const caption = this.state.caption;\n    const columns = this.state.columns;\n\n    const worksheetDatasources = this._filterWorksheets();\n\n    if (datasourceName) {\n      return (\n        <Details title={`${caption} - ${datasourceName}`}>\n          <form className=\"bg-white border rounded px-8 pt-6 pb-8 mb-4\">\n            <div>\n              <div>\n                <Label htmlFor=\"name\">Name</Label>\n                <TextInput name=\"name\" id=\"\" defaultValue={this.state.name} />\n              </div>\n              <div>\n                <Label htmlFor=\"version\">Version</Label>\n                <TextInput type=\"text\" name=\"version\" id=\"\" defaultValue={this.state.version} />\n              </div>\n              <div>\n                <Label htmlFor=\"caption\">Caption</Label>\n                <TextInput type=\"text\" name=\"caption\" id=\"\" defaultValue={this.state.caption} />\n              </div>\n            </div>\n          </form>\n          {connections.map((connection, connectionIndex) => {\n            return <Connection key={connectionIndex} connection={connection} />;\n          })}\n          <div className=\"bg-white border rounded px-8 pt-6 pb-8 mb-4\">\n            <h4 className=\"my-2\">Columns</h4>\n            <div className=\"table-wrapper overflow-y-auto overflow-x-hidden\">\n              <table className=\"table-fixed\">\n                <thead className=\"bg-gray-50 sticky top-0\">\n                  <tr>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Name</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Caption</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Datatype</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Role</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Type</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Calculation</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Description</th>\n                    <th className=\"px-6 py-2 text-xs text-gray-500\">Used In</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white\">\n                  {columns.map((column, columnIndex) => {\n                    return <Column key={columnIndex} column={column} worksheetDatasources={worksheetDatasources} />;\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </Details>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\n\nexport default class Worksheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worksheetXML: null,\n      name: null,\n      datasourceDependencies: null,\n    };\n    this._setUpdate = this._setUpdate.bind(this);\n    this._DatasourceDepsToParent = this._DatasourceDepsToParent.bind(this);\n    this._prepareDatasourceDependencies = this._prepareDatasourceDependencies.bind(this);\n  }\n\n  componentDidMount() {\n    this._setUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.workbook !== this.props.workbook) {\n      this._setUpdate();\n    }\n  }\n\n  _setUpdate() {\n    this.setState(\n      (state, props) => ({\n        datasourceXML: this.props.worksheet,\n        name: this.props.worksheet.getAttribute(\"name\"),\n        datasourceDependencies: this._prepareDatasourceDependencies(this.props.worksheet),\n      }),\n      () => this._DatasourceDepsToParent()\n    );\n  }\n\n  _DatasourceDepsToParent() {\n    if (this.props.addDatasourceDeps) {\n      this.props.addDatasourceDeps(this.state.name, this.state.datasourceDependencies);\n    }\n  }\n\n  _prepareDatasourceDependencies(worksheetXML) {\n    let datasourceDependencies = [];\n    let dependencies = worksheetXML.getElementsByTagName(\"datasource-dependencies\");\n    for (let index = 0; index < dependencies.length; index++) {\n      let dependency = dependencies[index];\n      let datasource = { name: \"\", columns: [] };\n      datasource.name = dependency.getAttribute(\"datasource\");\n      let columns = dependency.getElementsByTagName(\"column\");\n      for (let index = 0; index < columns.length; index++) {\n        let column = columns[index];\n        let columnName = column.getAttribute(\"name\");\n        datasource.columns.push(columnName);\n      }\n      datasourceDependencies.push(datasource);\n    }\n    return datasourceDependencies;\n  }\n\n  render() {\n    const worksheetName = this.state.name;\n    if (worksheetName) {\n      return <li>{this.state.name}</li>;\n    } else {\n      return \"\";\n    }\n  }\n}\n","import Datasource from \"../datasource/Datasource.js\";\nimport Worksheet from \"../worksheet/Worksheet.js\";\nimport Details from \"../layout/Details.js\";\nimport { Database, FileText } from \"react-feather\";\n\nimport React from \"react\";\n\nexport default class Workbook extends React.Component {\n  /**\n  Class for writing tableau workbook files\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileName: null,\n      workbookXML: null,\n      dashboards: null,\n      datasources: null,\n      worksheets: null,\n      worksheetsDatasources: [],\n    };\n    this._setUpdate = this._setUpdate.bind(this);\n    this._prepareDashboards = this._prepareDashboards.bind(this);\n    this._prepareDatasources = this._prepareDatasources.bind(this);\n    this._prepareWorksheets = this._prepareWorksheets.bind(this);\n    this._addWorksheetDeps = this._addWorksheetDeps.bind(this);\n  }\n\n  componentDidMount() {\n    this._setUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.workbook !== this.props.workbook) {\n      this._setUpdate();\n    }\n  }\n\n  _setUpdate() {\n    this.setState((state, props) => ({\n      fileName: this.props.workbook.file.name,\n      workbookXML: this.props.workbook.xmlDoc,\n      dashboards: this._prepareDashboards(this.props.workbook.xmlDoc),\n      datasources: this._prepareDatasources(this.props.workbook.xmlDoc),\n      worksheets: this._prepareWorksheets(this.props.workbook.xmlDoc),\n    }));\n  }\n\n  _prepareDashboards(workbookXML) {\n    let dashboards = [];\n\n    let dashboardElements = workbookXML.getElementsByTagName(\"dashboards\")[0].children;\n    if (!dashboardElements) return [];\n\n    for (let dashboard of dashboardElements) {\n      let dashboardName = dashboard.getAttribute(\"name\");\n      dashboards.push(dashboardName);\n    }\n    return dashboards;\n  }\n\n  _prepareDatasources(workbookXML) {\n    let datasources = [];\n\n    let datasourceElements = workbookXML.getElementsByTagName(\"datasources\")[0].children;\n    if (!datasourceElements) return [];\n\n    for (let datasourceXML of datasourceElements) {\n      datasources.push(datasourceXML);\n    }\n    return datasources;\n  }\n\n  _prepareWorksheets(workbookXML) {\n    let worksheets = [];\n\n    let worksheetElements = workbookXML.getElementsByTagName(\"worksheets\")[0].children;\n    if (!worksheetElements) return [];\n\n    for (let worksheetXML of worksheetElements) {\n      worksheets.push(worksheetXML);\n    }\n    return worksheets;\n  }\n\n  _addWorksheetDeps(worksheetName, datasourceDeps) {\n    this.setState({\n      worksheetsDatasources: this.state.worksheetsDatasources.concat({ worksheetName: worksheetName, datasourceDeps: datasourceDeps }),\n    });\n  }\n\n  _checkFieldsUsage(worksheets, datasourcesIndex) {\n    for (let worksheet of worksheets) {\n      for (let datasourceDepIndex in worksheet.datasourceDependencies) {\n        let datasourceDep = worksheet.datasourceDependencies[datasourceDepIndex];\n        let datasource = datasourcesIndex[datasourceDep.name];\n        for (let columnIndex in datasource.columns) {\n          let column = datasource.columns[columnIndex];\n          if (datasourceDep.columns.includes(column.name)) {\n            column.addUsedIn(worksheet.name);\n          }\n        }\n      }\n    }\n  }\n\n  save() {\n    const serializer = new XMLSerializer();\n    const xmlStr = serializer.serializeToString(this._workbookXML);\n    let downloadAnchor = document.createElement(\"a\");\n\n    downloadAnchor.setAttribute(\"href\", \"data:text/twb;charset=utf-8,\" + encodeURIComponent(xmlStr));\n    downloadAnchor.setAttribute(\"download\", this._fileName);\n\n    downloadAnchor.style.display = \"none\";\n    document.body.appendChild(downloadAnchor);\n\n    downloadAnchor.click();\n\n    document.body.removeChild(downloadAnchor);\n  }\n\n  render() {\n    const datasources = this.state.datasources;\n    const worksheets = this.state.worksheets;\n    const worksheetsDatasources = this.state.worksheetsDatasources;\n\n    if (datasources && worksheets) {\n      return (\n        <section>\n          <div className=\"mb-4 border-b-2\">\n            <h2 className=\"text-2xl mb-4\">\n              <span>{this.state.fileName}</span>\n            </h2>\n          </div>\n          <Details title=\"Datasources\" icon={<Database />}>\n            {datasources.map((datasource, datasourceIndex) => {\n              return <Datasource key={datasourceIndex} datasource={datasource} worksheetDatasources={worksheetsDatasources} />;\n            })}\n          </Details>\n          <Details title=\"Worksheets\" icon={<FileText />}>\n            <ul>\n              {worksheets.map((worksheet, worksheetIndex) => {\n                return <Worksheet key={worksheetIndex} worksheet={worksheet} addDatasourceDeps={this._addWorksheetDeps} />;\n              })}\n            </ul>\n          </Details>\n        </section>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\nimport JSZip from \"jszip\";\n\nimport FileUpload from \"../file/FileUpload.js\";\nimport MainHeading from \"../layout/MainHeading.js\";\n\nimport Workbook from \"./Workbook.js\";\n\nexport default class WorkbookView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { file: null, xmlDoc: null };\n    this.add = this.add.bind(this);\n    this.loaded = this.loaded.bind(this);\n  }\n\n  add(fileObject) {\n    this.setState({ file: fileObject }, () => this.loaded());\n  }\n\n  loaded() {\n    const parser = new DOMParser();\n    const file = this.state.file;\n\n    let type = file.name.split(\".\").slice(-1)[0];\n    if (type === \"twbx\") {\n      const zip = new JSZip();\n      zip.loadAsync(file).then((zip) => {\n        const twbName = Object.keys(zip.files).find((file) => file.includes(\".twb\"));\n        const twb = zip.files[twbName];\n        twb.async(\"string\").then((content) => {\n          if (!content) return (this.errorMessage = \"No twb file found\");\n          let xmlDoc = parser.parseFromString(content, \"text/xml\");\n          this.setState({ xmlDoc: xmlDoc });\n        });\n      });\n    } else if (type === \"twb\") {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        let xmlDoc = parser.parseFromString(event.target.result, \"text/xml\");\n        this.setState({ xmlDoc: xmlDoc });\n      };\n      reader.readAsText(file, \"UTF-8\");\n    }\n  }\n\n  render() {\n    const file = this.state.file;\n    const xmlDoc = this.state.xmlDoc;\n    if (file && xmlDoc) {\n      return (\n        <div className=\"container mx-auto px-4\">\n          <MainHeading>Workbook</MainHeading>\n          <FileUpload addEvent={this.add} loadedEvent={this.loaded} />\n          <Workbook workbook={this.state} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container mx-auto px-4\">\n          <MainHeading>Workbook</MainHeading>\n          <FileUpload addEvent={this.add} />\n        </div>\n      );\n    }\n  }\n}\n","import WorkbookView from \"./workbook/WorkbookView.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <WorkbookView />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}